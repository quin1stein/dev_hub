generator client {
  provider = "prisma-client-js"
  output   = "../../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id
  name      String
  email     String   @unique
  role      Role     @default(user)
  posts     Post[]
  votes     Vote[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id         Int          @id @default(autoincrement())
  title      String
  content    String
  userId     String
  user       User         @relation(fields: [userId], references: [id])
  votes      Vote[]
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  focusAreas FocusAreas[] @relation("PostFocusArea")
  comments   Comment[]
}

// Focus areas means **flairs** or **categories** of the post.
model FocusAreas {
  id    Int    @id @default(autoincrement())
  name  String @unique
  label String @unique
  posts Post[] @relation("PostFocusArea")
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  postId    Int
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  votes     Vote[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Vote {
  id        Int      @id @default(autoincrement())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  postId    Int?
  commentId Int?
  voteType  VoteType
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  post      Post?    @relation(fields: [postId], references: [id], onDelete: Cascade)
  comment   Comment? @relation(fields: [commentId], references: [id], onDelete: Cascade)

  @@unique([userId, postId])
  @@unique([userId, commentId])
}

enum VoteType {
  upvote
  downvote
}

enum Role {
  user
  admin
}
